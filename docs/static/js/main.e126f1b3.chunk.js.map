{"version":3,"sources":["componet/AddCategory.js","helpes/getGifs.js","componet/GifGridItem.js","componet/GifGrid.js","hooks/useFetchGif.js","componet/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gif","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","animate__animated","animate__bounce","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGif","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAqCeA,EAlCM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEFC,mBAAS,IAFP,mBAE/BC,EAF+B,KAEnBC,EAFmB,KAoBtC,OAEI,0BAAMC,SAdU,SAAAC,GAChBA,EAAEC,iBAKCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,OAOd,2BACEO,KAAM,OACNC,MAAOT,EACPU,SAtBgB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDACwCC,UAAUH,GADlD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGMA,EAAKC,OAHX,uBAGRC,EAHQ,EAGRA,KAEAC,EAAMD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT5B,kBAcRM,GAdQ,4CAAH,sDCApB,IAYeO,EAZK,SAAC,GAAiB,IAAhBb,EAAe,EAAfA,IAAIU,EAAW,EAAXA,MAGtB,OACI,yBAAKI,UAAW,0CACd,yBAAKC,IAAOf,EAAKgB,IAAON,IACxB,uBAAGO,mBAAiB,EAACC,iBAAe,GAAER,KCgCjCS,EAjCC,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDjB,SAAqBA,GAAW,IAAD,EAGhBd,mBAAS,CAE/BqB,KAAM,GACNe,SAAS,IAN6B,mBAGnCC,EAHmC,KAG5BC,EAH4B,KAwB1C,OAfAC,qBAAU,WACP1B,EAAQC,GACL0B,MAAK,SAAAC,GAEHC,YAAW,WACZJ,EAAS,CACLjB,KAAMoB,EACNL,SAAS,MAGZ,UAGN,CAACtB,IAEIuB,EDrBuBM,CAAY7B,GAA9Ba,EAFgB,EAErBN,KAAYe,EAFS,EAETA,QAWnB,OACI,oCAEI,4BAAKtB,GAET,yBAAKgB,UAAU,cACVM,GAAW,uBAAGN,UAAW,oCAAd,WAEVH,EAAOJ,KAAK,SAAAC,GAAG,OACb,kBAAC,EAAD,eACEoB,IAAOpB,EAAIC,IACPD,UEOPqB,EAlCM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,cAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAWvB,OACI,oCACA,4CAEA,kBAAC,EAAD,CAEEA,cAAiBA,IAGnB,6BAEE,4BACK+C,EAAWvB,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CAAU8B,IAAK9B,EAAUA,SAAUA,U,MCtBrDiC,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.e126f1b3.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSumit = e =>{\r\n        e.preventDefault()\r\n\r\n       // console.log('hecho')\r\n        \r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue,...cats])\r\n            setInputValue('')\r\n        }\r\n    }\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={handleSumit}>\r\n            <input\r\n              type ='text'\r\n              value={inputValue}\r\n              onChange={handleInputChange}\r\n              \r\n            />\r\n        </form>\r\n            \r\n        \r\n    )\r\n}\r\nexport default AddCategory\r\n\r\n\r\n\r\nAddCategory.propTypes ={\r\n     \r\n    setCategories: PropTypes.func.isRequired\r\n}"," \r\n \r\nexport const getGifs = async (category) =>{\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=Elq8MnETz623W1a1cszK7czvZsjb7cTh`\r\n        const resp = await fetch(url)\r\n        const {data} = await resp.json()\r\n         \r\n         const gif = data.map( img => {\r\n             return{\r\n                 id: img.id,\r\n                 title: img.title,\r\n                 url: img.images?.downsized_medium.url\r\n             }\r\n         })\r\n      //  console.log(gif)\r\n       // setImages(gif)\r\n       return (gif)\r\n    }","import React from 'react'\r\n\r\nconst GifGridItem = ({url,title}) => {\r\n    \r\n    \r\n    return (\r\n        <div className= \"card animate__animated animate__bounce\">\r\n          <img src = {url} alt = {title} />\r\n          <p animate__animated animate__bounce>{title}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react';\r\nimport useFetchGif from '../hooks/useFetchGif'\r\n import GifGridItem from './GifGridItem';\r\n// import {getGifs} from '../helpes/getGifs'\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGif(category)\r\n\r\n   // const [images, setImages] = useState([])\r\n\r\n    // useEffect(() =>{\r\n    //     getGifs(category).then(setImages)\r\n    // },[category])\r\n\r\n   \r\n  \r\n     \r\n    return (\r\n        <>   \r\n         \r\n            <h3>{category}</h3>\r\n         \r\n        <div className=\"card-grid \">\r\n            {loading && <p className =\"animate__animated animate__flash\">Loading</p>}\r\n          {\r\n              images.map( img => \r\n                <GifGridItem \r\n                  key = {img.id}\r\n                  {...img}\r\n                 //img={img}\r\n                />\r\n              )}\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","\r\n\r\nimport React,{useState,useEffect} from 'react'\r\nimport {getGifs} from '../helpes/getGifs'\r\n\r\n\r\nexport default function useFetchGif(category) {\r\n    \r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() =>{\r\n       getGifs(category)\r\n         .then(imgs =>{\r\n\r\n            setTimeout(() =>{  \r\n           setstate({\r\n               data: imgs,\r\n               loading: false\r\n           })\r\n\r\n          },3000)\r\n       })\r\n      \r\n    },[category])\r\n \r\n    return state\r\n}\r\n","import React,{ useState} from 'react';\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['one punch'])\r\n\r\n    // const handleAdd =() =>{\r\n    //     setCategories([...categories, 'hunter x hunter'])\r\n        \r\n    // }\r\n\r\n  \r\n\r\n    return ( \r\n        <>\r\n        <h1>GifExpertApp</h1>\r\n\r\n        <AddCategory \r\n         \r\n          setCategories = {setCategories}\r\n        />\r\n        \r\n        <hr/>\r\n\r\n          <ol>\r\n              {categories.map( category =>(\r\n                  <GifGrid  key={category} category={category} />))\r\n              \r\n           \r\n              }\r\n             \r\n      </ol>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './componet/GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}